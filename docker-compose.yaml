version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.6.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka-broker-1
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka-broker-1:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_SCHEMA_REGISTRY_URL:  "http://schema-registry:8081"

  ksqldb-cli:
    build: ksqldb-cli
    container_name: ksqldb-cli
    depends_on:
      - kafka-broker-1
      - ksqldb-server
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka-broker-1:9092
      TOPIC_NAME: "incident"
    entrypoint: ["/scripts/wait-for-ksql-server.sh"]
    tty: true
  
  producer:
    build: producer
    container_name: producer
    depends_on:
      kafka-broker-1:
        condition: service_started
      ksqldb-server:
        condition: service_started
      schema-registry:
        condition: service_started
      lfb-rt-simulator:
          condition: service_healthy

    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka-broker-1:9092
      KAFKA_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CSV_FILE_LOCATION: /app/data/LFB_Incident_data_from_January_2017.csv.gz
      SCHEMA_FILE_LOCATION: /app/schema/incident_schema.avsc
      PRODUCER_MAX_SLEEP_TIME_SECONDS: 5

  mongodb:
    build: mongo-db
    container_name: mongo
    depends_on:
      - kafka-broker-1
      - ksqldb-server
      - schema-registry
      - producer
    ports:
      - "27017:27017"

  consumer-1:
    build: consumer-1
    container_name: consumer-1
    depends_on:
      - kafka-broker-1
      - ksqldb-server
      - schema-registry
      - mongodb
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka-broker-1:9092
      KAFKA_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      MONGODB_URI: mongodb://mongodb:27017

  consumer-2:
    build: consumer-2
    container_name: consumer-2
    depends_on:
      - kafka-broker-1
      - ksqldb-server
      - schema-registry
      - mongodb
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka-broker-1:9092
      KAFKA_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      MONGODB_URI: mongodb://mongodb:27017

  lfb-rt-simulator:
    build: lfb-rt-simulator
    environment:
      CSV_FILE_LOCATION: data/LFB_Incident_data_from_January_2017.csv.gz
      PRODUCER_MAX_SLEEP_TIME_SECONDS: 2
    expose:
        - "5678"
        - "5679"
    healthcheck:
      test: ["CMD-SHELL", "python3 src/healthcheck.py"]
      interval: 5s
      timeout: 10s
      retries: 5
    entrypoint: ["python3", "src/lfb_ws_server.py"]
      